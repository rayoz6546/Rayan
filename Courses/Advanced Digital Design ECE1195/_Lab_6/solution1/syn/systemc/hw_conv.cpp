// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "hw_conv.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic hw_conv::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic hw_conv::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> hw_conv::ap_ST_fsm_state1 = "1";
const sc_lv<3> hw_conv::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> hw_conv::ap_ST_fsm_state6 = "100";
const bool hw_conv::ap_const_boolean_1 = true;
const sc_lv<1> hw_conv::ap_const_lv1_0 = "0";
const sc_lv<1> hw_conv::ap_const_lv1_1 = "1";
const sc_lv<2> hw_conv::ap_const_lv2_0 = "00";
const sc_lv<2> hw_conv::ap_const_lv2_2 = "10";
const sc_lv<2> hw_conv::ap_const_lv2_3 = "11";
const sc_lv<2> hw_conv::ap_const_lv2_1 = "1";
const sc_lv<32> hw_conv::ap_const_lv32_1 = "1";
const bool hw_conv::ap_const_boolean_0 = false;
const sc_lv<32> hw_conv::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<19> hw_conv::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<19> hw_conv::ap_const_lv19_40201 = "1000000001000000001";
const sc_lv<19> hw_conv::ap_const_lv19_1 = "1";
const sc_lv<19> hw_conv::ap_const_lv19_1FC = "111111100";
const sc_lv<32> hw_conv::ap_const_lv32_12 = "10010";
const sc_lv<19> hw_conv::ap_const_lv19_200 = "1000000000";
const sc_lv<19> hw_conv::ap_const_lv19_40200 = "1000000001000000000";
const sc_lv<19> hw_conv::ap_const_lv19_1FD = "111111101";
const sc_lv<3> hw_conv::ap_const_lv3_0 = "000";
const sc_lv<32> hw_conv::ap_const_lv32_8 = "1000";
const sc_lv<32> hw_conv::ap_const_lv32_B = "1011";
const sc_lv<4> hw_conv::ap_const_lv4_0 = "0000";
const sc_lv<12> hw_conv::ap_const_lv12_FF = "11111111";
const sc_lv<8> hw_conv::ap_const_lv8_0 = "00000000";
const sc_lv<32> hw_conv::ap_const_lv32_2 = "10";

hw_conv::hw_conv(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lbuf_0_U = new hw_conv_lbuf_0("lbuf_0_U");
    lbuf_0_U->clk(ap_clk);
    lbuf_0_U->reset(ap_rst_n_inv);
    lbuf_0_U->address0(lbuf_0_address0);
    lbuf_0_U->ce0(lbuf_0_ce0);
    lbuf_0_U->q0(lbuf_0_q0);
    lbuf_0_U->address1(lbuf_0_addr_reg_618);
    lbuf_0_U->ce1(lbuf_0_ce1);
    lbuf_0_U->we1(lbuf_0_we1);
    lbuf_0_U->d1(kbuf_1_0_s_fu_116);
    lbuf_1_U = new hw_conv_lbuf_0("lbuf_1_U");
    lbuf_1_U->clk(ap_clk);
    lbuf_1_U->reset(ap_rst_n_inv);
    lbuf_1_U->address0(lbuf_1_address0);
    lbuf_1_U->ce0(lbuf_1_ce0);
    lbuf_1_U->q0(lbuf_1_q0);
    lbuf_1_U->address1(lbuf_1_addr_reg_629);
    lbuf_1_U->ce1(lbuf_1_ce1);
    lbuf_1_U->we1(lbuf_1_we1);
    lbuf_1_U->d1(kbuf_2_0_s_fu_128);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( sin_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op49_read_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( sin_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_predicate_op49_read_state2 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( sin_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_predicate_op49_read_state2 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( sin_V_data_V_0_vld_out );
    sensitive << ( ap_predicate_op49_read_state2 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( sout_V_data_V_1_ack_in );
    sensitive << ( tmp_3_reg_638_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( sout_V_data_V_1_ack_in );
    sensitive << ( tmp_3_reg_638_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6);
    sensitive << ( sout_V_data_V_1_ack_in );
    sensitive << ( sout_V_keep_V_1_ack_in );
    sensitive << ( sout_V_strb_V_1_ack_in );
    sensitive << ( sout_V_user_V_1_ack_in );
    sensitive << ( sout_V_last_V_1_ack_in );
    sensitive << ( sout_V_id_V_1_ack_in );
    sensitive << ( sout_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_condition_pp0_exit_iter1_state3);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_predicate_op49_read_state2);
    sensitive << ( exitcond1_fu_253_p2 );
    sensitive << ( tmp_fu_277_p3 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_exitcond1_fu_253_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i_reg_228 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_1_fu_259_p2);
    sensitive << ( i_reg_228 );

    SC_METHOD(thread_icmp_fu_517_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_4_fu_507_p4 );

    SC_METHOD(thread_idx_urem_fu_318_p3);
    sensitive << ( next_urem_fu_306_p2 );
    sensitive << ( tmp_8_fu_312_p2 );

    SC_METHOD(thread_kbuf_1_2_1_fu_379_p3);
    sensitive << ( tmp_5_reg_624 );
    sensitive << ( lbuf_1_q0 );
    sensitive << ( kbuf_1_1_fu_124 );

    SC_METHOD(thread_lbuf_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_1_fu_265_p1 );

    SC_METHOD(thread_lbuf_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_lbuf_0_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_lbuf_0_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond1_reg_609 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_lbuf_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_1_fu_265_p1 );

    SC_METHOD(thread_lbuf_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_lbuf_1_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_lbuf_1_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond1_reg_609 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_next_urem_fu_306_p2);
    sensitive << ( phi_urem_reg_239 );

    SC_METHOD(thread_p_result_fu_523_p3);
    sensitive << ( result_2_2_2_fu_501_p2 );
    sensitive << ( icmp_fu_517_p2 );

    SC_METHOD(thread_p_shl_cast_fu_453_p1);
    sensitive << ( p_shl_fu_445_p3 );

    SC_METHOD(thread_p_shl_fu_445_p3);
    sensitive << ( kbuf_1_1_fu_124 );

    SC_METHOD(thread_result_2_1_1_fu_457_p2);
    sensitive << ( result_2_1_cast_fu_441_p1 );
    sensitive << ( p_shl_cast_fu_453_p1 );

    SC_METHOD(thread_result_2_1_cast_fu_441_p1);
    sensitive << ( result_2_1_fu_435_p2 );

    SC_METHOD(thread_result_2_1_fu_435_p2);
    sensitive << ( tmp1_cast_fu_421_p1 );
    sensitive << ( tmp2_cast_fu_431_p1 );

    SC_METHOD(thread_result_2_2_2_fu_501_p2);
    sensitive << ( tmp5_fu_493_p2 );
    sensitive << ( tmp6_cast_fu_498_p1 );

    SC_METHOD(thread_sin_TDATA_blk_n);
    sensitive << ( sin_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond1_fu_253_p2 );
    sensitive << ( tmp_fu_277_p3 );

    SC_METHOD(thread_sin_TREADY);
    sensitive << ( sin_V_dest_V_0_state );

    SC_METHOD(thread_sin_V_data_V_0_ack_in);
    sensitive << ( sin_V_data_V_0_state );

    SC_METHOD(thread_sin_V_data_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op49_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sin_V_data_V_0_data_out);
    sensitive << ( sin_V_data_V_0_payload_A );
    sensitive << ( sin_V_data_V_0_payload_B );
    sensitive << ( sin_V_data_V_0_sel );

    SC_METHOD(thread_sin_V_data_V_0_load_A);
    sensitive << ( sin_V_data_V_0_sel_wr );
    sensitive << ( sin_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_sin_V_data_V_0_load_B);
    sensitive << ( sin_V_data_V_0_sel_wr );
    sensitive << ( sin_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_sin_V_data_V_0_sel);
    sensitive << ( sin_V_data_V_0_sel_rd );

    SC_METHOD(thread_sin_V_data_V_0_state_cmp_full);
    sensitive << ( sin_V_data_V_0_state );

    SC_METHOD(thread_sin_V_data_V_0_vld_in);
    sensitive << ( sin_TVALID );

    SC_METHOD(thread_sin_V_data_V_0_vld_out);
    sensitive << ( sin_V_data_V_0_state );

    SC_METHOD(thread_sin_V_dest_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op49_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sin_V_dest_V_0_vld_in);
    sensitive << ( sin_TVALID );

    SC_METHOD(thread_sout_TDATA);
    sensitive << ( sout_V_data_V_1_data_out );

    SC_METHOD(thread_sout_TDATA_blk_n);
    sensitive << ( sout_V_data_V_1_state );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_reg_638_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_reg_638_pp0_iter2_reg );

    SC_METHOD(thread_sout_TDEST);
    sensitive << ( sout_V_dest_V_1_data_out );

    SC_METHOD(thread_sout_TID);
    sensitive << ( sout_V_id_V_1_data_out );

    SC_METHOD(thread_sout_TKEEP);
    sensitive << ( sout_V_keep_V_1_data_out );

    SC_METHOD(thread_sout_TLAST);
    sensitive << ( sout_V_last_V_1_data_out );

    SC_METHOD(thread_sout_TSTRB);
    sensitive << ( sout_V_strb_V_1_data_out );

    SC_METHOD(thread_sout_TUSER);
    sensitive << ( sout_V_user_V_1_data_out );

    SC_METHOD(thread_sout_TVALID);
    sensitive << ( sout_V_dest_V_1_state );

    SC_METHOD(thread_sout_V_data_V_1_ack_in);
    sensitive << ( sout_V_data_V_1_state );

    SC_METHOD(thread_sout_V_data_V_1_ack_out);
    sensitive << ( sout_TREADY );

    SC_METHOD(thread_sout_V_data_V_1_data_out);
    sensitive << ( sout_V_data_V_1_payload_A );
    sensitive << ( sout_V_data_V_1_payload_B );
    sensitive << ( sout_V_data_V_1_sel );

    SC_METHOD(thread_sout_V_data_V_1_load_A);
    sensitive << ( sout_V_data_V_1_sel_wr );
    sensitive << ( sout_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_sout_V_data_V_1_load_B);
    sensitive << ( sout_V_data_V_1_sel_wr );
    sensitive << ( sout_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_sout_V_data_V_1_sel);
    sensitive << ( sout_V_data_V_1_sel_rd );

    SC_METHOD(thread_sout_V_data_V_1_state_cmp_full);
    sensitive << ( sout_V_data_V_1_state );

    SC_METHOD(thread_sout_V_data_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_reg_638_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sout_V_data_V_1_vld_out);
    sensitive << ( sout_V_data_V_1_state );

    SC_METHOD(thread_sout_V_dest_V_1_ack_in);
    sensitive << ( sout_V_dest_V_1_state );

    SC_METHOD(thread_sout_V_dest_V_1_ack_out);
    sensitive << ( sout_TREADY );

    SC_METHOD(thread_sout_V_dest_V_1_data_out);
    sensitive << ( sout_V_dest_V_1_sel );

    SC_METHOD(thread_sout_V_dest_V_1_sel);
    sensitive << ( sout_V_dest_V_1_sel_rd );

    SC_METHOD(thread_sout_V_dest_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_reg_638_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sout_V_dest_V_1_vld_out);
    sensitive << ( sout_V_dest_V_1_state );

    SC_METHOD(thread_sout_V_id_V_1_ack_in);
    sensitive << ( sout_V_id_V_1_state );

    SC_METHOD(thread_sout_V_id_V_1_ack_out);
    sensitive << ( sout_TREADY );

    SC_METHOD(thread_sout_V_id_V_1_data_out);
    sensitive << ( sout_V_id_V_1_sel );

    SC_METHOD(thread_sout_V_id_V_1_sel);
    sensitive << ( sout_V_id_V_1_sel_rd );

    SC_METHOD(thread_sout_V_id_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_reg_638_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sout_V_id_V_1_vld_out);
    sensitive << ( sout_V_id_V_1_state );

    SC_METHOD(thread_sout_V_keep_V_1_ack_in);
    sensitive << ( sout_V_keep_V_1_state );

    SC_METHOD(thread_sout_V_keep_V_1_ack_out);
    sensitive << ( sout_TREADY );

    SC_METHOD(thread_sout_V_keep_V_1_data_out);
    sensitive << ( sout_V_keep_V_1_sel );

    SC_METHOD(thread_sout_V_keep_V_1_sel);
    sensitive << ( sout_V_keep_V_1_sel_rd );

    SC_METHOD(thread_sout_V_keep_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_reg_638_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sout_V_keep_V_1_vld_out);
    sensitive << ( sout_V_keep_V_1_state );

    SC_METHOD(thread_sout_V_last_V_1_ack_in);
    sensitive << ( sout_V_last_V_1_state );

    SC_METHOD(thread_sout_V_last_V_1_ack_out);
    sensitive << ( sout_TREADY );

    SC_METHOD(thread_sout_V_last_V_1_data_out);
    sensitive << ( sout_V_last_V_1_payload_A );
    sensitive << ( sout_V_last_V_1_payload_B );
    sensitive << ( sout_V_last_V_1_sel );

    SC_METHOD(thread_sout_V_last_V_1_load_A);
    sensitive << ( sout_V_last_V_1_sel_wr );
    sensitive << ( sout_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_sout_V_last_V_1_load_B);
    sensitive << ( sout_V_last_V_1_sel_wr );
    sensitive << ( sout_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_sout_V_last_V_1_sel);
    sensitive << ( sout_V_last_V_1_sel_rd );

    SC_METHOD(thread_sout_V_last_V_1_state_cmp_full);
    sensitive << ( sout_V_last_V_1_state );

    SC_METHOD(thread_sout_V_last_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_reg_638_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sout_V_last_V_1_vld_out);
    sensitive << ( sout_V_last_V_1_state );

    SC_METHOD(thread_sout_V_strb_V_1_ack_in);
    sensitive << ( sout_V_strb_V_1_state );

    SC_METHOD(thread_sout_V_strb_V_1_ack_out);
    sensitive << ( sout_TREADY );

    SC_METHOD(thread_sout_V_strb_V_1_data_out);
    sensitive << ( sout_V_strb_V_1_sel );

    SC_METHOD(thread_sout_V_strb_V_1_sel);
    sensitive << ( sout_V_strb_V_1_sel_rd );

    SC_METHOD(thread_sout_V_strb_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_reg_638_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sout_V_strb_V_1_vld_out);
    sensitive << ( sout_V_strb_V_1_state );

    SC_METHOD(thread_sout_V_user_V_1_ack_in);
    sensitive << ( sout_V_user_V_1_state );

    SC_METHOD(thread_sout_V_user_V_1_ack_out);
    sensitive << ( sout_TREADY );

    SC_METHOD(thread_sout_V_user_V_1_data_out);
    sensitive << ( sout_V_user_V_1_sel );

    SC_METHOD(thread_sout_V_user_V_1_sel);
    sensitive << ( sout_V_user_V_1_sel_rd );

    SC_METHOD(thread_sout_V_user_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_reg_638_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sout_V_user_V_1_vld_out);
    sensitive << ( sout_V_user_V_1_state );

    SC_METHOD(thread_tmp1_cast_fu_421_p1);
    sensitive << ( tmp1_fu_415_p2 );

    SC_METHOD(thread_tmp1_fu_415_p2);
    sensitive << ( tmp_16_cast_fu_399_p1 );
    sensitive << ( tmp_16_0_1_cast_fu_403_p1 );

    SC_METHOD(thread_tmp2_cast_fu_431_p1);
    sensitive << ( tmp2_fu_425_p2 );

    SC_METHOD(thread_tmp2_fu_425_p2);
    sensitive << ( tmp_16_1_cast_fu_411_p1 );
    sensitive << ( tmp_16_0_2_cast_fu_407_p1 );

    SC_METHOD(thread_tmp5_fu_493_p2);
    sensitive << ( result_2_1_1_reg_657 );
    sensitive << ( tmp_16_2_cast_fu_490_p1 );

    SC_METHOD(thread_tmp6_cast_fu_498_p1);
    sensitive << ( tmp6_reg_662 );

    SC_METHOD(thread_tmp6_fu_484_p2);
    sensitive << ( tmp_16_2_1_cast_fu_467_p1 );
    sensitive << ( tmp7_cast_fu_480_p1 );

    SC_METHOD(thread_tmp7_cast_fu_480_p1);
    sensitive << ( tmp7_fu_474_p2 );

    SC_METHOD(thread_tmp7_fu_474_p2);
    sensitive << ( tmp_16_2_2_cast_fu_470_p1 );
    sensitive << ( tmp_16_1_2_cast_fu_463_p1 );

    SC_METHOD(thread_tmp_16_0_1_cast_fu_403_p1);
    sensitive << ( kbuf_0_1_fu_112 );

    SC_METHOD(thread_tmp_16_0_2_cast_fu_407_p1);
    sensitive << ( lbuf_0_q0 );

    SC_METHOD(thread_tmp_16_1_2_cast_fu_463_p1);
    sensitive << ( kbuf_1_2_1_fu_379_p3 );

    SC_METHOD(thread_tmp_16_1_cast_fu_411_p1);
    sensitive << ( kbuf_1_0_fu_120 );

    SC_METHOD(thread_tmp_16_2_1_cast_fu_467_p1);
    sensitive << ( kbuf_2_1_1_reg_603 );

    SC_METHOD(thread_tmp_16_2_2_cast_fu_470_p1);
    sensitive << ( kbuf_2_1_fu_136 );

    SC_METHOD(thread_tmp_16_2_cast_fu_490_p1);
    sensitive << ( kbuf_2_0_load_6_reg_652 );

    SC_METHOD(thread_tmp_16_cast_fu_399_p1);
    sensitive << ( kbuf_0_0_fu_108 );

    SC_METHOD(thread_tmp_1_fu_265_p1);
    sensitive << ( phi_urem_reg_239 );

    SC_METHOD(thread_tmp_3_fu_294_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond1_fu_253_p2 );
    sensitive << ( i_reg_228 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_4_fu_507_p4);
    sensitive << ( result_2_2_2_fu_501_p2 );

    SC_METHOD(thread_tmp_5_fu_271_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond1_fu_253_p2 );
    sensitive << ( i_reg_228 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_6_fu_531_p3);
    sensitive << ( p_result_fu_523_p3 );

    SC_METHOD(thread_tmp_7_fu_539_p1);
    sensitive << ( p_result_fu_523_p3 );

    SC_METHOD(thread_tmp_8_fu_312_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond1_fu_253_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( next_urem_fu_306_p2 );

    SC_METHOD(thread_tmp_V_fu_543_p3);
    sensitive << ( tmp_6_fu_531_p3 );
    sensitive << ( tmp_7_fu_539_p1 );

    SC_METHOD(thread_tmp_fu_277_p3);
    sensitive << ( i_reg_228 );

    SC_METHOD(thread_tmp_last_V_fu_300_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond1_fu_253_p2 );
    sensitive << ( i_reg_228 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_3_fu_294_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( sout_V_data_V_1_ack_in );
    sensitive << ( sout_V_data_V_1_state );
    sensitive << ( sout_V_keep_V_1_ack_in );
    sensitive << ( sout_V_keep_V_1_state );
    sensitive << ( sout_V_strb_V_1_ack_in );
    sensitive << ( sout_V_strb_V_1_state );
    sensitive << ( sout_V_user_V_1_ack_in );
    sensitive << ( sout_V_user_V_1_state );
    sensitive << ( sout_V_last_V_1_ack_in );
    sensitive << ( sout_V_last_V_1_state );
    sensitive << ( sout_V_id_V_1_ack_in );
    sensitive << ( sout_V_id_V_1_state );
    sensitive << ( sout_V_dest_V_1_ack_in );
    sensitive << ( sout_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    sin_V_data_V_0_sel_rd = SC_LOGIC_0;
    sin_V_data_V_0_sel_wr = SC_LOGIC_0;
    sin_V_data_V_0_state = "00";
    sin_V_dest_V_0_state = "00";
    sout_V_data_V_1_sel_rd = SC_LOGIC_0;
    sout_V_data_V_1_sel_wr = SC_LOGIC_0;
    sout_V_data_V_1_state = "00";
    sout_V_keep_V_1_sel_rd = SC_LOGIC_0;
    sout_V_keep_V_1_state = "00";
    sout_V_strb_V_1_sel_rd = SC_LOGIC_0;
    sout_V_strb_V_1_state = "00";
    sout_V_user_V_1_sel_rd = SC_LOGIC_0;
    sout_V_user_V_1_state = "00";
    sout_V_last_V_1_sel_rd = SC_LOGIC_0;
    sout_V_last_V_1_sel_wr = SC_LOGIC_0;
    sout_V_last_V_1_state = "00";
    sout_V_id_V_1_sel_rd = SC_LOGIC_0;
    sout_V_id_V_1_state = "00";
    sout_V_dest_V_1_sel_rd = SC_LOGIC_0;
    sout_V_dest_V_1_state = "00";
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "hw_conv_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, sin_TDATA, "(port)sin_TDATA");
    sc_trace(mVcdFile, sin_TVALID, "(port)sin_TVALID");
    sc_trace(mVcdFile, sin_TREADY, "(port)sin_TREADY");
    sc_trace(mVcdFile, sin_TKEEP, "(port)sin_TKEEP");
    sc_trace(mVcdFile, sin_TSTRB, "(port)sin_TSTRB");
    sc_trace(mVcdFile, sin_TUSER, "(port)sin_TUSER");
    sc_trace(mVcdFile, sin_TLAST, "(port)sin_TLAST");
    sc_trace(mVcdFile, sin_TID, "(port)sin_TID");
    sc_trace(mVcdFile, sin_TDEST, "(port)sin_TDEST");
    sc_trace(mVcdFile, sout_TDATA, "(port)sout_TDATA");
    sc_trace(mVcdFile, sout_TVALID, "(port)sout_TVALID");
    sc_trace(mVcdFile, sout_TREADY, "(port)sout_TREADY");
    sc_trace(mVcdFile, sout_TKEEP, "(port)sout_TKEEP");
    sc_trace(mVcdFile, sout_TSTRB, "(port)sout_TSTRB");
    sc_trace(mVcdFile, sout_TUSER, "(port)sout_TUSER");
    sc_trace(mVcdFile, sout_TLAST, "(port)sout_TLAST");
    sc_trace(mVcdFile, sout_TID, "(port)sout_TID");
    sc_trace(mVcdFile, sout_TDEST, "(port)sout_TDEST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, sin_V_data_V_0_data_out, "sin_V_data_V_0_data_out");
    sc_trace(mVcdFile, sin_V_data_V_0_vld_in, "sin_V_data_V_0_vld_in");
    sc_trace(mVcdFile, sin_V_data_V_0_vld_out, "sin_V_data_V_0_vld_out");
    sc_trace(mVcdFile, sin_V_data_V_0_ack_in, "sin_V_data_V_0_ack_in");
    sc_trace(mVcdFile, sin_V_data_V_0_ack_out, "sin_V_data_V_0_ack_out");
    sc_trace(mVcdFile, sin_V_data_V_0_payload_A, "sin_V_data_V_0_payload_A");
    sc_trace(mVcdFile, sin_V_data_V_0_payload_B, "sin_V_data_V_0_payload_B");
    sc_trace(mVcdFile, sin_V_data_V_0_sel_rd, "sin_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, sin_V_data_V_0_sel_wr, "sin_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, sin_V_data_V_0_sel, "sin_V_data_V_0_sel");
    sc_trace(mVcdFile, sin_V_data_V_0_load_A, "sin_V_data_V_0_load_A");
    sc_trace(mVcdFile, sin_V_data_V_0_load_B, "sin_V_data_V_0_load_B");
    sc_trace(mVcdFile, sin_V_data_V_0_state, "sin_V_data_V_0_state");
    sc_trace(mVcdFile, sin_V_data_V_0_state_cmp_full, "sin_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, sin_V_dest_V_0_vld_in, "sin_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, sin_V_dest_V_0_ack_out, "sin_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, sin_V_dest_V_0_state, "sin_V_dest_V_0_state");
    sc_trace(mVcdFile, sout_V_data_V_1_data_out, "sout_V_data_V_1_data_out");
    sc_trace(mVcdFile, sout_V_data_V_1_vld_in, "sout_V_data_V_1_vld_in");
    sc_trace(mVcdFile, sout_V_data_V_1_vld_out, "sout_V_data_V_1_vld_out");
    sc_trace(mVcdFile, sout_V_data_V_1_ack_in, "sout_V_data_V_1_ack_in");
    sc_trace(mVcdFile, sout_V_data_V_1_ack_out, "sout_V_data_V_1_ack_out");
    sc_trace(mVcdFile, sout_V_data_V_1_payload_A, "sout_V_data_V_1_payload_A");
    sc_trace(mVcdFile, sout_V_data_V_1_payload_B, "sout_V_data_V_1_payload_B");
    sc_trace(mVcdFile, sout_V_data_V_1_sel_rd, "sout_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, sout_V_data_V_1_sel_wr, "sout_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, sout_V_data_V_1_sel, "sout_V_data_V_1_sel");
    sc_trace(mVcdFile, sout_V_data_V_1_load_A, "sout_V_data_V_1_load_A");
    sc_trace(mVcdFile, sout_V_data_V_1_load_B, "sout_V_data_V_1_load_B");
    sc_trace(mVcdFile, sout_V_data_V_1_state, "sout_V_data_V_1_state");
    sc_trace(mVcdFile, sout_V_data_V_1_state_cmp_full, "sout_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, sout_V_keep_V_1_data_out, "sout_V_keep_V_1_data_out");
    sc_trace(mVcdFile, sout_V_keep_V_1_vld_in, "sout_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, sout_V_keep_V_1_vld_out, "sout_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, sout_V_keep_V_1_ack_in, "sout_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, sout_V_keep_V_1_ack_out, "sout_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, sout_V_keep_V_1_sel_rd, "sout_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, sout_V_keep_V_1_sel, "sout_V_keep_V_1_sel");
    sc_trace(mVcdFile, sout_V_keep_V_1_state, "sout_V_keep_V_1_state");
    sc_trace(mVcdFile, sout_V_strb_V_1_data_out, "sout_V_strb_V_1_data_out");
    sc_trace(mVcdFile, sout_V_strb_V_1_vld_in, "sout_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, sout_V_strb_V_1_vld_out, "sout_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, sout_V_strb_V_1_ack_in, "sout_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, sout_V_strb_V_1_ack_out, "sout_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, sout_V_strb_V_1_sel_rd, "sout_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, sout_V_strb_V_1_sel, "sout_V_strb_V_1_sel");
    sc_trace(mVcdFile, sout_V_strb_V_1_state, "sout_V_strb_V_1_state");
    sc_trace(mVcdFile, sout_V_user_V_1_data_out, "sout_V_user_V_1_data_out");
    sc_trace(mVcdFile, sout_V_user_V_1_vld_in, "sout_V_user_V_1_vld_in");
    sc_trace(mVcdFile, sout_V_user_V_1_vld_out, "sout_V_user_V_1_vld_out");
    sc_trace(mVcdFile, sout_V_user_V_1_ack_in, "sout_V_user_V_1_ack_in");
    sc_trace(mVcdFile, sout_V_user_V_1_ack_out, "sout_V_user_V_1_ack_out");
    sc_trace(mVcdFile, sout_V_user_V_1_sel_rd, "sout_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, sout_V_user_V_1_sel, "sout_V_user_V_1_sel");
    sc_trace(mVcdFile, sout_V_user_V_1_state, "sout_V_user_V_1_state");
    sc_trace(mVcdFile, sout_V_last_V_1_data_out, "sout_V_last_V_1_data_out");
    sc_trace(mVcdFile, sout_V_last_V_1_vld_in, "sout_V_last_V_1_vld_in");
    sc_trace(mVcdFile, sout_V_last_V_1_vld_out, "sout_V_last_V_1_vld_out");
    sc_trace(mVcdFile, sout_V_last_V_1_ack_in, "sout_V_last_V_1_ack_in");
    sc_trace(mVcdFile, sout_V_last_V_1_ack_out, "sout_V_last_V_1_ack_out");
    sc_trace(mVcdFile, sout_V_last_V_1_payload_A, "sout_V_last_V_1_payload_A");
    sc_trace(mVcdFile, sout_V_last_V_1_payload_B, "sout_V_last_V_1_payload_B");
    sc_trace(mVcdFile, sout_V_last_V_1_sel_rd, "sout_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, sout_V_last_V_1_sel_wr, "sout_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, sout_V_last_V_1_sel, "sout_V_last_V_1_sel");
    sc_trace(mVcdFile, sout_V_last_V_1_load_A, "sout_V_last_V_1_load_A");
    sc_trace(mVcdFile, sout_V_last_V_1_load_B, "sout_V_last_V_1_load_B");
    sc_trace(mVcdFile, sout_V_last_V_1_state, "sout_V_last_V_1_state");
    sc_trace(mVcdFile, sout_V_last_V_1_state_cmp_full, "sout_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, sout_V_id_V_1_data_out, "sout_V_id_V_1_data_out");
    sc_trace(mVcdFile, sout_V_id_V_1_vld_in, "sout_V_id_V_1_vld_in");
    sc_trace(mVcdFile, sout_V_id_V_1_vld_out, "sout_V_id_V_1_vld_out");
    sc_trace(mVcdFile, sout_V_id_V_1_ack_in, "sout_V_id_V_1_ack_in");
    sc_trace(mVcdFile, sout_V_id_V_1_ack_out, "sout_V_id_V_1_ack_out");
    sc_trace(mVcdFile, sout_V_id_V_1_sel_rd, "sout_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, sout_V_id_V_1_sel, "sout_V_id_V_1_sel");
    sc_trace(mVcdFile, sout_V_id_V_1_state, "sout_V_id_V_1_state");
    sc_trace(mVcdFile, sout_V_dest_V_1_data_out, "sout_V_dest_V_1_data_out");
    sc_trace(mVcdFile, sout_V_dest_V_1_vld_in, "sout_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, sout_V_dest_V_1_vld_out, "sout_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, sout_V_dest_V_1_ack_in, "sout_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, sout_V_dest_V_1_ack_out, "sout_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, sout_V_dest_V_1_sel_rd, "sout_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, sout_V_dest_V_1_sel, "sout_V_dest_V_1_sel");
    sc_trace(mVcdFile, sout_V_dest_V_1_state, "sout_V_dest_V_1_state");
    sc_trace(mVcdFile, sin_TDATA_blk_n, "sin_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond1_fu_253_p2, "exitcond1_fu_253_p2");
    sc_trace(mVcdFile, tmp_fu_277_p3, "tmp_fu_277_p3");
    sc_trace(mVcdFile, sout_TDATA_blk_n, "sout_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, tmp_3_reg_638, "tmp_3_reg_638");
    sc_trace(mVcdFile, tmp_3_reg_638_pp0_iter1_reg, "tmp_3_reg_638_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, tmp_3_reg_638_pp0_iter2_reg, "tmp_3_reg_638_pp0_iter2_reg");
    sc_trace(mVcdFile, i_reg_228, "i_reg_228");
    sc_trace(mVcdFile, phi_urem_reg_239, "phi_urem_reg_239");
    sc_trace(mVcdFile, kbuf_2_1_1_reg_603, "kbuf_2_1_1_reg_603");
    sc_trace(mVcdFile, ap_predicate_op49_read_state2, "ap_predicate_op49_read_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond1_reg_609, "exitcond1_reg_609");
    sc_trace(mVcdFile, i_1_fu_259_p2, "i_1_fu_259_p2");
    sc_trace(mVcdFile, lbuf_0_addr_reg_618, "lbuf_0_addr_reg_618");
    sc_trace(mVcdFile, tmp_5_fu_271_p2, "tmp_5_fu_271_p2");
    sc_trace(mVcdFile, tmp_5_reg_624, "tmp_5_reg_624");
    sc_trace(mVcdFile, lbuf_1_addr_reg_629, "lbuf_1_addr_reg_629");
    sc_trace(mVcdFile, tmp_3_fu_294_p2, "tmp_3_fu_294_p2");
    sc_trace(mVcdFile, tmp_last_V_fu_300_p2, "tmp_last_V_fu_300_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_642, "tmp_last_V_reg_642");
    sc_trace(mVcdFile, tmp_last_V_reg_642_pp0_iter1_reg, "tmp_last_V_reg_642_pp0_iter1_reg");
    sc_trace(mVcdFile, idx_urem_fu_318_p3, "idx_urem_fu_318_p3");
    sc_trace(mVcdFile, kbuf_2_0_load_6_reg_652, "kbuf_2_0_load_6_reg_652");
    sc_trace(mVcdFile, result_2_1_1_fu_457_p2, "result_2_1_1_fu_457_p2");
    sc_trace(mVcdFile, result_2_1_1_reg_657, "result_2_1_1_reg_657");
    sc_trace(mVcdFile, tmp6_fu_484_p2, "tmp6_fu_484_p2");
    sc_trace(mVcdFile, tmp6_reg_662, "tmp6_reg_662");
    sc_trace(mVcdFile, tmp_V_fu_543_p3, "tmp_V_fu_543_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter1_state3, "ap_condition_pp0_exit_iter1_state3");
    sc_trace(mVcdFile, lbuf_0_address0, "lbuf_0_address0");
    sc_trace(mVcdFile, lbuf_0_ce0, "lbuf_0_ce0");
    sc_trace(mVcdFile, lbuf_0_q0, "lbuf_0_q0");
    sc_trace(mVcdFile, lbuf_0_ce1, "lbuf_0_ce1");
    sc_trace(mVcdFile, lbuf_0_we1, "lbuf_0_we1");
    sc_trace(mVcdFile, lbuf_1_address0, "lbuf_1_address0");
    sc_trace(mVcdFile, lbuf_1_ce0, "lbuf_1_ce0");
    sc_trace(mVcdFile, lbuf_1_q0, "lbuf_1_q0");
    sc_trace(mVcdFile, lbuf_1_ce1, "lbuf_1_ce1");
    sc_trace(mVcdFile, lbuf_1_we1, "lbuf_1_we1");
    sc_trace(mVcdFile, tmp_1_fu_265_p1, "tmp_1_fu_265_p1");
    sc_trace(mVcdFile, kbuf_0_0_fu_108, "kbuf_0_0_fu_108");
    sc_trace(mVcdFile, kbuf_0_1_fu_112, "kbuf_0_1_fu_112");
    sc_trace(mVcdFile, kbuf_1_0_s_fu_116, "kbuf_1_0_s_fu_116");
    sc_trace(mVcdFile, kbuf_1_0_fu_120, "kbuf_1_0_fu_120");
    sc_trace(mVcdFile, kbuf_1_1_fu_124, "kbuf_1_1_fu_124");
    sc_trace(mVcdFile, kbuf_1_2_1_fu_379_p3, "kbuf_1_2_1_fu_379_p3");
    sc_trace(mVcdFile, kbuf_2_0_s_fu_128, "kbuf_2_0_s_fu_128");
    sc_trace(mVcdFile, kbuf_2_0_fu_132, "kbuf_2_0_fu_132");
    sc_trace(mVcdFile, kbuf_2_1_fu_136, "kbuf_2_1_fu_136");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, next_urem_fu_306_p2, "next_urem_fu_306_p2");
    sc_trace(mVcdFile, tmp_8_fu_312_p2, "tmp_8_fu_312_p2");
    sc_trace(mVcdFile, tmp_16_cast_fu_399_p1, "tmp_16_cast_fu_399_p1");
    sc_trace(mVcdFile, tmp_16_0_1_cast_fu_403_p1, "tmp_16_0_1_cast_fu_403_p1");
    sc_trace(mVcdFile, tmp1_fu_415_p2, "tmp1_fu_415_p2");
    sc_trace(mVcdFile, tmp_16_1_cast_fu_411_p1, "tmp_16_1_cast_fu_411_p1");
    sc_trace(mVcdFile, tmp_16_0_2_cast_fu_407_p1, "tmp_16_0_2_cast_fu_407_p1");
    sc_trace(mVcdFile, tmp2_fu_425_p2, "tmp2_fu_425_p2");
    sc_trace(mVcdFile, tmp1_cast_fu_421_p1, "tmp1_cast_fu_421_p1");
    sc_trace(mVcdFile, tmp2_cast_fu_431_p1, "tmp2_cast_fu_431_p1");
    sc_trace(mVcdFile, result_2_1_fu_435_p2, "result_2_1_fu_435_p2");
    sc_trace(mVcdFile, p_shl_fu_445_p3, "p_shl_fu_445_p3");
    sc_trace(mVcdFile, result_2_1_cast_fu_441_p1, "result_2_1_cast_fu_441_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_453_p1, "p_shl_cast_fu_453_p1");
    sc_trace(mVcdFile, tmp_16_2_2_cast_fu_470_p1, "tmp_16_2_2_cast_fu_470_p1");
    sc_trace(mVcdFile, tmp_16_1_2_cast_fu_463_p1, "tmp_16_1_2_cast_fu_463_p1");
    sc_trace(mVcdFile, tmp7_fu_474_p2, "tmp7_fu_474_p2");
    sc_trace(mVcdFile, tmp_16_2_1_cast_fu_467_p1, "tmp_16_2_1_cast_fu_467_p1");
    sc_trace(mVcdFile, tmp7_cast_fu_480_p1, "tmp7_cast_fu_480_p1");
    sc_trace(mVcdFile, tmp_16_2_cast_fu_490_p1, "tmp_16_2_cast_fu_490_p1");
    sc_trace(mVcdFile, tmp5_fu_493_p2, "tmp5_fu_493_p2");
    sc_trace(mVcdFile, tmp6_cast_fu_498_p1, "tmp6_cast_fu_498_p1");
    sc_trace(mVcdFile, result_2_2_2_fu_501_p2, "result_2_2_2_fu_501_p2");
    sc_trace(mVcdFile, tmp_4_fu_507_p4, "tmp_4_fu_507_p4");
    sc_trace(mVcdFile, icmp_fu_517_p2, "icmp_fu_517_p2");
    sc_trace(mVcdFile, p_result_fu_523_p3, "p_result_fu_523_p3");
    sc_trace(mVcdFile, tmp_6_fu_531_p3, "tmp_6_fu_531_p3");
    sc_trace(mVcdFile, tmp_7_fu_539_p1, "tmp_7_fu_539_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_block_state6, "ap_block_state6");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("hw_conv.hdltvin.dat");
    mHdltvoutHandle.open("hw_conv.hdltvout.dat");
}

hw_conv::~hw_conv() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete lbuf_0_U;
    delete lbuf_1_U;
}

void hw_conv::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_253_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter1_state3.read())) {
                ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter0.read();
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_253_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_reg_228 = i_1_fu_259_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        i_reg_228 = ap_const_lv19_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_253_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        phi_urem_reg_239 = idx_urem_fu_318_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        phi_urem_reg_239 = ap_const_lv19_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sin_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sin_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sin_V_data_V_0_vld_out.read()))) {
            sin_V_data_V_0_sel_rd =  (sc_logic) (~sin_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sin_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sin_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sin_V_data_V_0_ack_in.read()))) {
            sin_V_data_V_0_sel_wr =  (sc_logic) (~sin_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sin_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, sin_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, sin_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(sin_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, sin_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(sin_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            sin_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sin_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, sin_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(sin_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, sin_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(sin_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            sin_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sin_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(sin_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, sin_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(sin_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(sin_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, sin_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sin_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, sin_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, sin_V_data_V_0_ack_out.read()))))) {
            sin_V_data_V_0_state = ap_const_lv2_3;
        } else {
            sin_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sin_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, sin_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, sin_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, sin_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, sin_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, sin_V_dest_V_0_state.read())))) {
            sin_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sin_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, sin_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, sin_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, sin_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sin_V_dest_V_0_state.read())))) {
            sin_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sin_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, sin_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, sin_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sin_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, sin_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, sin_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sin_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, sin_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, sin_V_dest_V_0_ack_out.read()))))) {
            sin_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            sin_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sout_V_data_V_1_vld_out.read()))) {
            sout_V_data_V_1_sel_rd =  (sc_logic) (~sout_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sout_V_data_V_1_ack_in.read()))) {
            sout_V_data_V_1_sel_wr =  (sc_logic) (~sout_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, sout_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, sout_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, sout_V_data_V_1_state.read())))) {
            sout_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, sout_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sout_V_data_V_1_state.read())))) {
            sout_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, sout_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, sout_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sout_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, sout_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, sout_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, sout_V_data_V_1_ack_out.read()))))) {
            sout_V_data_V_1_state = ap_const_lv2_3;
        } else {
            sout_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sout_V_dest_V_1_vld_out.read()))) {
            sout_V_dest_V_1_sel_rd =  (sc_logic) (~sout_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, sout_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, sout_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, sout_V_dest_V_1_state.read())))) {
            sout_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, sout_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sout_V_dest_V_1_state.read())))) {
            sout_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, sout_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, sout_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sout_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, sout_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, sout_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, sout_V_dest_V_1_ack_out.read()))))) {
            sout_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            sout_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sout_V_id_V_1_vld_out.read()))) {
            sout_V_id_V_1_sel_rd =  (sc_logic) (~sout_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, sout_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, sout_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, sout_V_id_V_1_state.read())))) {
            sout_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, sout_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sout_V_id_V_1_state.read())))) {
            sout_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, sout_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, sout_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sout_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, sout_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, sout_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, sout_V_id_V_1_ack_out.read()))))) {
            sout_V_id_V_1_state = ap_const_lv2_3;
        } else {
            sout_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sout_V_keep_V_1_vld_out.read()))) {
            sout_V_keep_V_1_sel_rd =  (sc_logic) (~sout_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, sout_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, sout_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, sout_V_keep_V_1_state.read())))) {
            sout_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, sout_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sout_V_keep_V_1_state.read())))) {
            sout_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, sout_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, sout_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sout_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, sout_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, sout_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, sout_V_keep_V_1_ack_out.read()))))) {
            sout_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            sout_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sout_V_last_V_1_vld_out.read()))) {
            sout_V_last_V_1_sel_rd =  (sc_logic) (~sout_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sout_V_last_V_1_ack_in.read()))) {
            sout_V_last_V_1_sel_wr =  (sc_logic) (~sout_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, sout_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, sout_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, sout_V_last_V_1_state.read())))) {
            sout_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, sout_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sout_V_last_V_1_state.read())))) {
            sout_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, sout_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, sout_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sout_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, sout_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, sout_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, sout_V_last_V_1_ack_out.read()))))) {
            sout_V_last_V_1_state = ap_const_lv2_3;
        } else {
            sout_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sout_V_strb_V_1_vld_out.read()))) {
            sout_V_strb_V_1_sel_rd =  (sc_logic) (~sout_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, sout_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, sout_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, sout_V_strb_V_1_state.read())))) {
            sout_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, sout_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sout_V_strb_V_1_state.read())))) {
            sout_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, sout_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, sout_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sout_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, sout_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, sout_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, sout_V_strb_V_1_ack_out.read()))))) {
            sout_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            sout_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sout_V_user_V_1_vld_out.read()))) {
            sout_V_user_V_1_sel_rd =  (sc_logic) (~sout_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sout_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, sout_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, sout_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, sout_V_user_V_1_state.read())))) {
            sout_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, sout_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sout_V_user_V_1_state.read())))) {
            sout_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sout_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, sout_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, sout_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sout_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, sout_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, sout_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, sout_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, sout_V_user_V_1_ack_out.read()))))) {
            sout_V_user_V_1_state = ap_const_lv2_3;
        } else {
            sout_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond1_reg_609 = exitcond1_fu_253_p2.read();
        kbuf_2_0_load_6_reg_652 = kbuf_2_0_fu_132.read();
        kbuf_2_1_1_reg_603 = kbuf_2_1_fu_136.read();
        tmp_3_reg_638_pp0_iter1_reg = tmp_3_reg_638.read();
        tmp_last_V_reg_642_pp0_iter1_reg = tmp_last_V_reg_642.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        kbuf_0_0_fu_108 = kbuf_0_1_fu_112.read();
        kbuf_1_0_fu_120 = kbuf_1_1_fu_124.read();
        kbuf_1_0_s_fu_116 = kbuf_1_0_fu_120.read();
        kbuf_2_0_fu_132 = kbuf_2_1_1_reg_603.read();
        kbuf_2_0_s_fu_128 = kbuf_2_0_fu_132.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_609.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        kbuf_0_1_fu_112 = lbuf_0_q0.read();
        kbuf_1_1_fu_124 = kbuf_1_2_1_fu_379_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_253_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_277_p3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        kbuf_2_1_fu_136 = sin_V_data_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_253_p2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        lbuf_0_addr_reg_618 =  (sc_lv<9>) (tmp_1_fu_265_p1.read());
        lbuf_1_addr_reg_629 =  (sc_lv<9>) (tmp_1_fu_265_p1.read());
        tmp_3_reg_638 = tmp_3_fu_294_p2.read();
        tmp_5_reg_624 = tmp_5_fu_271_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_609.read()))) {
        result_2_1_1_reg_657 = result_2_1_1_fu_457_p2.read();
        tmp6_reg_662 = tmp6_fu_484_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, sin_V_data_V_0_load_A.read())) {
        sin_V_data_V_0_payload_A = sin_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, sin_V_data_V_0_load_B.read())) {
        sin_V_data_V_0_payload_B = sin_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, sout_V_data_V_1_load_A.read())) {
        sout_V_data_V_1_payload_A = tmp_V_fu_543_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, sout_V_data_V_1_load_B.read())) {
        sout_V_data_V_1_payload_B = tmp_V_fu_543_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, sout_V_last_V_1_load_A.read())) {
        sout_V_last_V_1_payload_A = tmp_last_V_reg_642_pp0_iter1_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, sout_V_last_V_1_load_B.read())) {
        sout_V_last_V_1_payload_B = tmp_last_V_reg_642_pp0_iter1_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        tmp_3_reg_638_pp0_iter2_reg = tmp_3_reg_638_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_253_p2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_294_p2.read()))) {
        tmp_last_V_reg_642 = tmp_last_V_fu_300_p2.read();
    }
}

void hw_conv::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void hw_conv::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void hw_conv::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[2];
}

void hw_conv::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void hw_conv::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sin_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op49_read_state2.read()));
}

void hw_conv::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, sin_V_data_V_0_vld_out.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op49_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())));
}

void hw_conv::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, sin_V_data_V_0_vld_out.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op49_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())));
}

void hw_conv::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, sin_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op49_read_state2.read()));
}

void hw_conv::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void hw_conv::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_638_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_data_V_1_ack_in.read()));
}

void hw_conv::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void hw_conv::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_638_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_data_V_1_ack_in.read()));
}

void hw_conv::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void hw_conv::thread_ap_block_state6() {
    ap_block_state6 = (esl_seteq<1,1,1>(ap_const_logic_0, sout_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, sout_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, sout_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, sout_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, sout_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, sout_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, sout_V_dest_V_1_ack_in.read()));
}

void hw_conv::thread_ap_condition_pp0_exit_iter1_state3() {
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
        ap_condition_pp0_exit_iter1_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter1_state3 = ap_const_logic_0;
    }
}

void hw_conv::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void hw_conv::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void hw_conv::thread_ap_predicate_op49_read_state2() {
    ap_predicate_op49_read_state2 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_253_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_277_p3.read()));
}

void hw_conv::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void hw_conv::thread_exitcond1_fu_253_p2() {
    exitcond1_fu_253_p2 = (!i_reg_228.read().is_01() || !ap_const_lv19_40201.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_228.read() == ap_const_lv19_40201);
}

void hw_conv::thread_i_1_fu_259_p2() {
    i_1_fu_259_p2 = (!i_reg_228.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(i_reg_228.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void hw_conv::thread_icmp_fu_517_p2() {
    icmp_fu_517_p2 = (!tmp_4_fu_507_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): (sc_bigint<4>(tmp_4_fu_507_p4.read()) > sc_bigint<4>(ap_const_lv4_0));
}

void hw_conv::thread_idx_urem_fu_318_p3() {
    idx_urem_fu_318_p3 = (!tmp_8_fu_312_p2.read()[0].is_01())? sc_lv<19>(): ((tmp_8_fu_312_p2.read()[0].to_bool())? next_urem_fu_306_p2.read(): ap_const_lv19_0);
}

void hw_conv::thread_kbuf_1_2_1_fu_379_p3() {
    kbuf_1_2_1_fu_379_p3 = (!tmp_5_reg_624.read()[0].is_01())? sc_lv<8>(): ((tmp_5_reg_624.read()[0].to_bool())? lbuf_1_q0.read(): kbuf_1_1_fu_124.read());
}

void hw_conv::thread_lbuf_0_address0() {
    lbuf_0_address0 =  (sc_lv<9>) (tmp_1_fu_265_p1.read());
}

void hw_conv::thread_lbuf_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        lbuf_0_ce0 = ap_const_logic_1;
    } else {
        lbuf_0_ce0 = ap_const_logic_0;
    }
}

void hw_conv::thread_lbuf_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lbuf_0_ce1 = ap_const_logic_1;
    } else {
        lbuf_0_ce1 = ap_const_logic_0;
    }
}

void hw_conv::thread_lbuf_0_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_609.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lbuf_0_we1 = ap_const_logic_1;
    } else {
        lbuf_0_we1 = ap_const_logic_0;
    }
}

void hw_conv::thread_lbuf_1_address0() {
    lbuf_1_address0 =  (sc_lv<9>) (tmp_1_fu_265_p1.read());
}

void hw_conv::thread_lbuf_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        lbuf_1_ce0 = ap_const_logic_1;
    } else {
        lbuf_1_ce0 = ap_const_logic_0;
    }
}

void hw_conv::thread_lbuf_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lbuf_1_ce1 = ap_const_logic_1;
    } else {
        lbuf_1_ce1 = ap_const_logic_0;
    }
}

void hw_conv::thread_lbuf_1_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_609.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lbuf_1_we1 = ap_const_logic_1;
    } else {
        lbuf_1_we1 = ap_const_logic_0;
    }
}

void hw_conv::thread_next_urem_fu_306_p2() {
    next_urem_fu_306_p2 = (!phi_urem_reg_239.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(phi_urem_reg_239.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void hw_conv::thread_p_result_fu_523_p3() {
    p_result_fu_523_p3 = (!icmp_fu_517_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_fu_517_p2.read()[0].to_bool())? ap_const_lv12_FF: result_2_2_2_fu_501_p2.read());
}

void hw_conv::thread_p_shl_cast_fu_453_p1() {
    p_shl_cast_fu_453_p1 = esl_zext<12,11>(p_shl_fu_445_p3.read());
}

void hw_conv::thread_p_shl_fu_445_p3() {
    p_shl_fu_445_p3 = esl_concat<8,3>(kbuf_1_1_fu_124.read(), ap_const_lv3_0);
}

void hw_conv::thread_result_2_1_1_fu_457_p2() {
    result_2_1_1_fu_457_p2 = (!result_2_1_cast_fu_441_p1.read().is_01() || !p_shl_cast_fu_453_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(result_2_1_cast_fu_441_p1.read()) - sc_biguint<12>(p_shl_cast_fu_453_p1.read()));
}

void hw_conv::thread_result_2_1_cast_fu_441_p1() {
    result_2_1_cast_fu_441_p1 = esl_zext<12,10>(result_2_1_fu_435_p2.read());
}

void hw_conv::thread_result_2_1_fu_435_p2() {
    result_2_1_fu_435_p2 = (!tmp1_cast_fu_421_p1.read().is_01() || !tmp2_cast_fu_431_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp1_cast_fu_421_p1.read()) + sc_biguint<10>(tmp2_cast_fu_431_p1.read()));
}

void hw_conv::thread_result_2_2_2_fu_501_p2() {
    result_2_2_2_fu_501_p2 = (!tmp5_fu_493_p2.read().is_01() || !tmp6_cast_fu_498_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp5_fu_493_p2.read()) + sc_biguint<12>(tmp6_cast_fu_498_p1.read()));
}

void hw_conv::thread_sin_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_253_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_277_p3.read()))) {
        sin_TDATA_blk_n = sin_V_data_V_0_state.read()[0];
    } else {
        sin_TDATA_blk_n = ap_const_logic_1;
    }
}

void hw_conv::thread_sin_TREADY() {
    sin_TREADY = sin_V_dest_V_0_state.read()[1];
}

void hw_conv::thread_sin_V_data_V_0_ack_in() {
    sin_V_data_V_0_ack_in = sin_V_data_V_0_state.read()[1];
}

void hw_conv::thread_sin_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op49_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sin_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        sin_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void hw_conv::thread_sin_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, sin_V_data_V_0_sel.read())) {
        sin_V_data_V_0_data_out = sin_V_data_V_0_payload_B.read();
    } else {
        sin_V_data_V_0_data_out = sin_V_data_V_0_payload_A.read();
    }
}

void hw_conv::thread_sin_V_data_V_0_load_A() {
    sin_V_data_V_0_load_A = (sin_V_data_V_0_state_cmp_full.read() & ~sin_V_data_V_0_sel_wr.read());
}

void hw_conv::thread_sin_V_data_V_0_load_B() {
    sin_V_data_V_0_load_B = (sin_V_data_V_0_sel_wr.read() & sin_V_data_V_0_state_cmp_full.read());
}

void hw_conv::thread_sin_V_data_V_0_sel() {
    sin_V_data_V_0_sel = sin_V_data_V_0_sel_rd.read();
}

void hw_conv::thread_sin_V_data_V_0_state_cmp_full() {
    sin_V_data_V_0_state_cmp_full =  (sc_logic) ((!sin_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(sin_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void hw_conv::thread_sin_V_data_V_0_vld_in() {
    sin_V_data_V_0_vld_in = sin_TVALID.read();
}

void hw_conv::thread_sin_V_data_V_0_vld_out() {
    sin_V_data_V_0_vld_out = sin_V_data_V_0_state.read()[0];
}

void hw_conv::thread_sin_V_dest_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op49_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sin_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        sin_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void hw_conv::thread_sin_V_dest_V_0_vld_in() {
    sin_V_dest_V_0_vld_in = sin_TVALID.read();
}

void hw_conv::thread_sout_TDATA() {
    sout_TDATA = sout_V_data_V_1_data_out.read();
}

void hw_conv::thread_sout_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_638_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_638_pp0_iter2_reg.read())))) {
        sout_TDATA_blk_n = sout_V_data_V_1_state.read()[1];
    } else {
        sout_TDATA_blk_n = ap_const_logic_1;
    }
}

void hw_conv::thread_sout_TDEST() {
    sout_TDEST = sout_V_dest_V_1_data_out.read();
}

void hw_conv::thread_sout_TID() {
    sout_TID = sout_V_id_V_1_data_out.read();
}

void hw_conv::thread_sout_TKEEP() {
    sout_TKEEP = sout_V_keep_V_1_data_out.read();
}

void hw_conv::thread_sout_TLAST() {
    sout_TLAST = sout_V_last_V_1_data_out.read();
}

void hw_conv::thread_sout_TSTRB() {
    sout_TSTRB = sout_V_strb_V_1_data_out.read();
}

void hw_conv::thread_sout_TUSER() {
    sout_TUSER = sout_V_user_V_1_data_out.read();
}

void hw_conv::thread_sout_TVALID() {
    sout_TVALID = sout_V_dest_V_1_state.read()[0];
}

void hw_conv::thread_sout_V_data_V_1_ack_in() {
    sout_V_data_V_1_ack_in = sout_V_data_V_1_state.read()[1];
}

void hw_conv::thread_sout_V_data_V_1_ack_out() {
    sout_V_data_V_1_ack_out = sout_TREADY.read();
}

void hw_conv::thread_sout_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, sout_V_data_V_1_sel.read())) {
        sout_V_data_V_1_data_out = sout_V_data_V_1_payload_B.read();
    } else {
        sout_V_data_V_1_data_out = sout_V_data_V_1_payload_A.read();
    }
}

void hw_conv::thread_sout_V_data_V_1_load_A() {
    sout_V_data_V_1_load_A = (sout_V_data_V_1_state_cmp_full.read() & ~sout_V_data_V_1_sel_wr.read());
}

void hw_conv::thread_sout_V_data_V_1_load_B() {
    sout_V_data_V_1_load_B = (sout_V_data_V_1_sel_wr.read() & sout_V_data_V_1_state_cmp_full.read());
}

void hw_conv::thread_sout_V_data_V_1_sel() {
    sout_V_data_V_1_sel = sout_V_data_V_1_sel_rd.read();
}

void hw_conv::thread_sout_V_data_V_1_state_cmp_full() {
    sout_V_data_V_1_state_cmp_full =  (sc_logic) ((!sout_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(sout_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void hw_conv::thread_sout_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_638_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sout_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        sout_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void hw_conv::thread_sout_V_data_V_1_vld_out() {
    sout_V_data_V_1_vld_out = sout_V_data_V_1_state.read()[0];
}

void hw_conv::thread_sout_V_dest_V_1_ack_in() {
    sout_V_dest_V_1_ack_in = sout_V_dest_V_1_state.read()[1];
}

void hw_conv::thread_sout_V_dest_V_1_ack_out() {
    sout_V_dest_V_1_ack_out = sout_TREADY.read();
}

void hw_conv::thread_sout_V_dest_V_1_data_out() {
    sout_V_dest_V_1_data_out = ap_const_lv1_0;
}

void hw_conv::thread_sout_V_dest_V_1_sel() {
    sout_V_dest_V_1_sel = sout_V_dest_V_1_sel_rd.read();
}

void hw_conv::thread_sout_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_638_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sout_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        sout_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void hw_conv::thread_sout_V_dest_V_1_vld_out() {
    sout_V_dest_V_1_vld_out = sout_V_dest_V_1_state.read()[0];
}

void hw_conv::thread_sout_V_id_V_1_ack_in() {
    sout_V_id_V_1_ack_in = sout_V_id_V_1_state.read()[1];
}

void hw_conv::thread_sout_V_id_V_1_ack_out() {
    sout_V_id_V_1_ack_out = sout_TREADY.read();
}

void hw_conv::thread_sout_V_id_V_1_data_out() {
    sout_V_id_V_1_data_out = ap_const_lv1_0;
}

void hw_conv::thread_sout_V_id_V_1_sel() {
    sout_V_id_V_1_sel = sout_V_id_V_1_sel_rd.read();
}

void hw_conv::thread_sout_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_638_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sout_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        sout_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void hw_conv::thread_sout_V_id_V_1_vld_out() {
    sout_V_id_V_1_vld_out = sout_V_id_V_1_state.read()[0];
}

void hw_conv::thread_sout_V_keep_V_1_ack_in() {
    sout_V_keep_V_1_ack_in = sout_V_keep_V_1_state.read()[1];
}

void hw_conv::thread_sout_V_keep_V_1_ack_out() {
    sout_V_keep_V_1_ack_out = sout_TREADY.read();
}

void hw_conv::thread_sout_V_keep_V_1_data_out() {
    sout_V_keep_V_1_data_out = ap_const_lv1_1;
}

void hw_conv::thread_sout_V_keep_V_1_sel() {
    sout_V_keep_V_1_sel = sout_V_keep_V_1_sel_rd.read();
}

void hw_conv::thread_sout_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_638_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sout_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        sout_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void hw_conv::thread_sout_V_keep_V_1_vld_out() {
    sout_V_keep_V_1_vld_out = sout_V_keep_V_1_state.read()[0];
}

void hw_conv::thread_sout_V_last_V_1_ack_in() {
    sout_V_last_V_1_ack_in = sout_V_last_V_1_state.read()[1];
}

void hw_conv::thread_sout_V_last_V_1_ack_out() {
    sout_V_last_V_1_ack_out = sout_TREADY.read();
}

void hw_conv::thread_sout_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, sout_V_last_V_1_sel.read())) {
        sout_V_last_V_1_data_out = sout_V_last_V_1_payload_B.read();
    } else {
        sout_V_last_V_1_data_out = sout_V_last_V_1_payload_A.read();
    }
}

void hw_conv::thread_sout_V_last_V_1_load_A() {
    sout_V_last_V_1_load_A = (sout_V_last_V_1_state_cmp_full.read() & ~sout_V_last_V_1_sel_wr.read());
}

void hw_conv::thread_sout_V_last_V_1_load_B() {
    sout_V_last_V_1_load_B = (sout_V_last_V_1_sel_wr.read() & sout_V_last_V_1_state_cmp_full.read());
}

void hw_conv::thread_sout_V_last_V_1_sel() {
    sout_V_last_V_1_sel = sout_V_last_V_1_sel_rd.read();
}

void hw_conv::thread_sout_V_last_V_1_state_cmp_full() {
    sout_V_last_V_1_state_cmp_full =  (sc_logic) ((!sout_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(sout_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void hw_conv::thread_sout_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_638_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sout_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        sout_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void hw_conv::thread_sout_V_last_V_1_vld_out() {
    sout_V_last_V_1_vld_out = sout_V_last_V_1_state.read()[0];
}

void hw_conv::thread_sout_V_strb_V_1_ack_in() {
    sout_V_strb_V_1_ack_in = sout_V_strb_V_1_state.read()[1];
}

void hw_conv::thread_sout_V_strb_V_1_ack_out() {
    sout_V_strb_V_1_ack_out = sout_TREADY.read();
}

void hw_conv::thread_sout_V_strb_V_1_data_out() {
    sout_V_strb_V_1_data_out = ap_const_lv1_0;
}

void hw_conv::thread_sout_V_strb_V_1_sel() {
    sout_V_strb_V_1_sel = sout_V_strb_V_1_sel_rd.read();
}

void hw_conv::thread_sout_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_638_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sout_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        sout_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void hw_conv::thread_sout_V_strb_V_1_vld_out() {
    sout_V_strb_V_1_vld_out = sout_V_strb_V_1_state.read()[0];
}

void hw_conv::thread_sout_V_user_V_1_ack_in() {
    sout_V_user_V_1_ack_in = sout_V_user_V_1_state.read()[1];
}

void hw_conv::thread_sout_V_user_V_1_ack_out() {
    sout_V_user_V_1_ack_out = sout_TREADY.read();
}

void hw_conv::thread_sout_V_user_V_1_data_out() {
    sout_V_user_V_1_data_out = ap_const_lv1_0;
}

void hw_conv::thread_sout_V_user_V_1_sel() {
    sout_V_user_V_1_sel = sout_V_user_V_1_sel_rd.read();
}

void hw_conv::thread_sout_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_638_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sout_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        sout_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void hw_conv::thread_sout_V_user_V_1_vld_out() {
    sout_V_user_V_1_vld_out = sout_V_user_V_1_state.read()[0];
}

void hw_conv::thread_tmp1_cast_fu_421_p1() {
    tmp1_cast_fu_421_p1 = esl_zext<10,9>(tmp1_fu_415_p2.read());
}

void hw_conv::thread_tmp1_fu_415_p2() {
    tmp1_fu_415_p2 = (!tmp_16_cast_fu_399_p1.read().is_01() || !tmp_16_0_1_cast_fu_403_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_16_cast_fu_399_p1.read()) + sc_biguint<9>(tmp_16_0_1_cast_fu_403_p1.read()));
}

void hw_conv::thread_tmp2_cast_fu_431_p1() {
    tmp2_cast_fu_431_p1 = esl_zext<10,9>(tmp2_fu_425_p2.read());
}

void hw_conv::thread_tmp2_fu_425_p2() {
    tmp2_fu_425_p2 = (!tmp_16_1_cast_fu_411_p1.read().is_01() || !tmp_16_0_2_cast_fu_407_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_16_1_cast_fu_411_p1.read()) + sc_biguint<9>(tmp_16_0_2_cast_fu_407_p1.read()));
}

void hw_conv::thread_tmp5_fu_493_p2() {
    tmp5_fu_493_p2 = (!tmp_16_2_cast_fu_490_p1.read().is_01() || !result_2_1_1_reg_657.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_16_2_cast_fu_490_p1.read()) + sc_biguint<12>(result_2_1_1_reg_657.read()));
}

void hw_conv::thread_tmp6_cast_fu_498_p1() {
    tmp6_cast_fu_498_p1 = esl_zext<12,10>(tmp6_reg_662.read());
}

void hw_conv::thread_tmp6_fu_484_p2() {
    tmp6_fu_484_p2 = (!tmp_16_2_1_cast_fu_467_p1.read().is_01() || !tmp7_cast_fu_480_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_16_2_1_cast_fu_467_p1.read()) + sc_biguint<10>(tmp7_cast_fu_480_p1.read()));
}

void hw_conv::thread_tmp7_cast_fu_480_p1() {
    tmp7_cast_fu_480_p1 = esl_zext<10,9>(tmp7_fu_474_p2.read());
}

void hw_conv::thread_tmp7_fu_474_p2() {
    tmp7_fu_474_p2 = (!tmp_16_2_2_cast_fu_470_p1.read().is_01() || !tmp_16_1_2_cast_fu_463_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_16_2_2_cast_fu_470_p1.read()) + sc_biguint<9>(tmp_16_1_2_cast_fu_463_p1.read()));
}

void hw_conv::thread_tmp_16_0_1_cast_fu_403_p1() {
    tmp_16_0_1_cast_fu_403_p1 = esl_zext<9,8>(kbuf_0_1_fu_112.read());
}

void hw_conv::thread_tmp_16_0_2_cast_fu_407_p1() {
    tmp_16_0_2_cast_fu_407_p1 = esl_zext<9,8>(lbuf_0_q0.read());
}

void hw_conv::thread_tmp_16_1_2_cast_fu_463_p1() {
    tmp_16_1_2_cast_fu_463_p1 = esl_zext<9,8>(kbuf_1_2_1_fu_379_p3.read());
}

void hw_conv::thread_tmp_16_1_cast_fu_411_p1() {
    tmp_16_1_cast_fu_411_p1 = esl_zext<9,8>(kbuf_1_0_fu_120.read());
}

void hw_conv::thread_tmp_16_2_1_cast_fu_467_p1() {
    tmp_16_2_1_cast_fu_467_p1 = esl_zext<10,8>(kbuf_2_1_1_reg_603.read());
}

void hw_conv::thread_tmp_16_2_2_cast_fu_470_p1() {
    tmp_16_2_2_cast_fu_470_p1 = esl_zext<9,8>(kbuf_2_1_fu_136.read());
}

void hw_conv::thread_tmp_16_2_cast_fu_490_p1() {
    tmp_16_2_cast_fu_490_p1 = esl_zext<12,8>(kbuf_2_0_load_6_reg_652.read());
}

void hw_conv::thread_tmp_16_cast_fu_399_p1() {
    tmp_16_cast_fu_399_p1 = esl_zext<9,8>(kbuf_0_0_fu_108.read());
}

void hw_conv::thread_tmp_1_fu_265_p1() {
    tmp_1_fu_265_p1 = esl_zext<64,19>(phi_urem_reg_239.read());
}

void hw_conv::thread_tmp_3_fu_294_p2() {
    tmp_3_fu_294_p2 = (!i_reg_228.read().is_01() || !ap_const_lv19_200.is_01())? sc_lv<1>(): (sc_biguint<19>(i_reg_228.read()) > sc_biguint<19>(ap_const_lv19_200));
}

void hw_conv::thread_tmp_4_fu_507_p4() {
    tmp_4_fu_507_p4 = result_2_2_2_fu_501_p2.read().range(11, 8);
}

void hw_conv::thread_tmp_5_fu_271_p2() {
    tmp_5_fu_271_p2 = (!i_reg_228.read().is_01() || !ap_const_lv19_1FC.is_01())? sc_lv<1>(): (sc_biguint<19>(i_reg_228.read()) > sc_biguint<19>(ap_const_lv19_1FC));
}

void hw_conv::thread_tmp_6_fu_531_p3() {
    tmp_6_fu_531_p3 = p_result_fu_523_p3.read().range(11, 11);
}

void hw_conv::thread_tmp_7_fu_539_p1() {
    tmp_7_fu_539_p1 = p_result_fu_523_p3.read().range(8-1, 0);
}

void hw_conv::thread_tmp_8_fu_312_p2() {
    tmp_8_fu_312_p2 = (!next_urem_fu_306_p2.read().is_01() || !ap_const_lv19_1FD.is_01())? sc_lv<1>(): (sc_biguint<19>(next_urem_fu_306_p2.read()) < sc_biguint<19>(ap_const_lv19_1FD));
}

void hw_conv::thread_tmp_V_fu_543_p3() {
    tmp_V_fu_543_p3 = (!tmp_6_fu_531_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_6_fu_531_p3.read()[0].to_bool())? ap_const_lv8_0: tmp_7_fu_539_p1.read());
}

void hw_conv::thread_tmp_fu_277_p3() {
    tmp_fu_277_p3 = i_reg_228.read().range(18, 18);
}

void hw_conv::thread_tmp_last_V_fu_300_p2() {
    tmp_last_V_fu_300_p2 = (!i_reg_228.read().is_01() || !ap_const_lv19_40200.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_228.read() == ap_const_lv19_40200);
}

void hw_conv::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_0, sout_V_data_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_keep_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_strb_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_user_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_last_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_id_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, sout_V_dest_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, sout_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, sout_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, sout_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, sout_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, sout_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, sout_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, sout_V_dest_V_1_ack_in.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void hw_conv::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sin_TDATA\" :  \"" << sin_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sin_TVALID\" :  \"" << sin_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"sin_TREADY\" :  \"" << sin_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sin_TKEEP\" :  \"" << sin_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sin_TSTRB\" :  \"" << sin_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sin_TUSER\" :  \"" << sin_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sin_TLAST\" :  \"" << sin_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sin_TID\" :  \"" << sin_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sin_TDEST\" :  \"" << sin_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sout_TDATA\" :  \"" << sout_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sout_TVALID\" :  \"" << sout_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sout_TREADY\" :  \"" << sout_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sout_TKEEP\" :  \"" << sout_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sout_TSTRB\" :  \"" << sout_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sout_TUSER\" :  \"" << sout_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sout_TLAST\" :  \"" << sout_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sout_TID\" :  \"" << sout_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sout_TDEST\" :  \"" << sout_TDEST.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

