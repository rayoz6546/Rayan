// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _hw_conv_HH_
#define _hw_conv_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "hw_conv_lbuf_0.h"

namespace ap_rtl {

struct hw_conv : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<8> > sin_TDATA;
    sc_in< sc_logic > sin_TVALID;
    sc_out< sc_logic > sin_TREADY;
    sc_in< sc_lv<1> > sin_TKEEP;
    sc_in< sc_lv<1> > sin_TSTRB;
    sc_in< sc_lv<1> > sin_TUSER;
    sc_in< sc_lv<1> > sin_TLAST;
    sc_in< sc_lv<1> > sin_TID;
    sc_in< sc_lv<1> > sin_TDEST;
    sc_out< sc_lv<8> > sout_TDATA;
    sc_out< sc_logic > sout_TVALID;
    sc_in< sc_logic > sout_TREADY;
    sc_out< sc_lv<1> > sout_TKEEP;
    sc_out< sc_lv<1> > sout_TSTRB;
    sc_out< sc_lv<1> > sout_TUSER;
    sc_out< sc_lv<1> > sout_TLAST;
    sc_out< sc_lv<1> > sout_TID;
    sc_out< sc_lv<1> > sout_TDEST;


    // Module declarations
    hw_conv(sc_module_name name);
    SC_HAS_PROCESS(hw_conv);

    ~hw_conv();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    hw_conv_lbuf_0* lbuf_0_U;
    hw_conv_lbuf_0* lbuf_1_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<8> > sin_V_data_V_0_data_out;
    sc_signal< sc_logic > sin_V_data_V_0_vld_in;
    sc_signal< sc_logic > sin_V_data_V_0_vld_out;
    sc_signal< sc_logic > sin_V_data_V_0_ack_in;
    sc_signal< sc_logic > sin_V_data_V_0_ack_out;
    sc_signal< sc_lv<8> > sin_V_data_V_0_payload_A;
    sc_signal< sc_lv<8> > sin_V_data_V_0_payload_B;
    sc_signal< sc_logic > sin_V_data_V_0_sel_rd;
    sc_signal< sc_logic > sin_V_data_V_0_sel_wr;
    sc_signal< sc_logic > sin_V_data_V_0_sel;
    sc_signal< sc_logic > sin_V_data_V_0_load_A;
    sc_signal< sc_logic > sin_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > sin_V_data_V_0_state;
    sc_signal< sc_logic > sin_V_data_V_0_state_cmp_full;
    sc_signal< sc_logic > sin_V_dest_V_0_vld_in;
    sc_signal< sc_logic > sin_V_dest_V_0_ack_out;
    sc_signal< sc_lv<2> > sin_V_dest_V_0_state;
    sc_signal< sc_lv<8> > sout_V_data_V_1_data_out;
    sc_signal< sc_logic > sout_V_data_V_1_vld_in;
    sc_signal< sc_logic > sout_V_data_V_1_vld_out;
    sc_signal< sc_logic > sout_V_data_V_1_ack_in;
    sc_signal< sc_logic > sout_V_data_V_1_ack_out;
    sc_signal< sc_lv<8> > sout_V_data_V_1_payload_A;
    sc_signal< sc_lv<8> > sout_V_data_V_1_payload_B;
    sc_signal< sc_logic > sout_V_data_V_1_sel_rd;
    sc_signal< sc_logic > sout_V_data_V_1_sel_wr;
    sc_signal< sc_logic > sout_V_data_V_1_sel;
    sc_signal< sc_logic > sout_V_data_V_1_load_A;
    sc_signal< sc_logic > sout_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > sout_V_data_V_1_state;
    sc_signal< sc_logic > sout_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > sout_V_keep_V_1_data_out;
    sc_signal< sc_logic > sout_V_keep_V_1_vld_in;
    sc_signal< sc_logic > sout_V_keep_V_1_vld_out;
    sc_signal< sc_logic > sout_V_keep_V_1_ack_in;
    sc_signal< sc_logic > sout_V_keep_V_1_ack_out;
    sc_signal< sc_logic > sout_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > sout_V_keep_V_1_sel;
    sc_signal< sc_lv<2> > sout_V_keep_V_1_state;
    sc_signal< sc_lv<1> > sout_V_strb_V_1_data_out;
    sc_signal< sc_logic > sout_V_strb_V_1_vld_in;
    sc_signal< sc_logic > sout_V_strb_V_1_vld_out;
    sc_signal< sc_logic > sout_V_strb_V_1_ack_in;
    sc_signal< sc_logic > sout_V_strb_V_1_ack_out;
    sc_signal< sc_logic > sout_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > sout_V_strb_V_1_sel;
    sc_signal< sc_lv<2> > sout_V_strb_V_1_state;
    sc_signal< sc_lv<1> > sout_V_user_V_1_data_out;
    sc_signal< sc_logic > sout_V_user_V_1_vld_in;
    sc_signal< sc_logic > sout_V_user_V_1_vld_out;
    sc_signal< sc_logic > sout_V_user_V_1_ack_in;
    sc_signal< sc_logic > sout_V_user_V_1_ack_out;
    sc_signal< sc_logic > sout_V_user_V_1_sel_rd;
    sc_signal< sc_logic > sout_V_user_V_1_sel;
    sc_signal< sc_lv<2> > sout_V_user_V_1_state;
    sc_signal< sc_lv<1> > sout_V_last_V_1_data_out;
    sc_signal< sc_logic > sout_V_last_V_1_vld_in;
    sc_signal< sc_logic > sout_V_last_V_1_vld_out;
    sc_signal< sc_logic > sout_V_last_V_1_ack_in;
    sc_signal< sc_logic > sout_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > sout_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > sout_V_last_V_1_payload_B;
    sc_signal< sc_logic > sout_V_last_V_1_sel_rd;
    sc_signal< sc_logic > sout_V_last_V_1_sel_wr;
    sc_signal< sc_logic > sout_V_last_V_1_sel;
    sc_signal< sc_logic > sout_V_last_V_1_load_A;
    sc_signal< sc_logic > sout_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > sout_V_last_V_1_state;
    sc_signal< sc_logic > sout_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > sout_V_id_V_1_data_out;
    sc_signal< sc_logic > sout_V_id_V_1_vld_in;
    sc_signal< sc_logic > sout_V_id_V_1_vld_out;
    sc_signal< sc_logic > sout_V_id_V_1_ack_in;
    sc_signal< sc_logic > sout_V_id_V_1_ack_out;
    sc_signal< sc_logic > sout_V_id_V_1_sel_rd;
    sc_signal< sc_logic > sout_V_id_V_1_sel;
    sc_signal< sc_lv<2> > sout_V_id_V_1_state;
    sc_signal< sc_lv<1> > sout_V_dest_V_1_data_out;
    sc_signal< sc_logic > sout_V_dest_V_1_vld_in;
    sc_signal< sc_logic > sout_V_dest_V_1_vld_out;
    sc_signal< sc_logic > sout_V_dest_V_1_ack_in;
    sc_signal< sc_logic > sout_V_dest_V_1_ack_out;
    sc_signal< sc_logic > sout_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > sout_V_dest_V_1_sel;
    sc_signal< sc_lv<2> > sout_V_dest_V_1_state;
    sc_signal< sc_logic > sin_TDATA_blk_n;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond1_fu_253_p2;
    sc_signal< sc_lv<1> > tmp_fu_277_p3;
    sc_signal< sc_logic > sout_TDATA_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > tmp_3_reg_638;
    sc_signal< sc_lv<1> > tmp_3_reg_638_pp0_iter1_reg;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<1> > tmp_3_reg_638_pp0_iter2_reg;
    sc_signal< sc_lv<19> > i_reg_228;
    sc_signal< sc_lv<19> > phi_urem_reg_239;
    sc_signal< sc_lv<8> > kbuf_2_1_1_reg_603;
    sc_signal< bool > ap_predicate_op49_read_state2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond1_reg_609;
    sc_signal< sc_lv<19> > i_1_fu_259_p2;
    sc_signal< sc_lv<9> > lbuf_0_addr_reg_618;
    sc_signal< sc_lv<1> > tmp_5_fu_271_p2;
    sc_signal< sc_lv<1> > tmp_5_reg_624;
    sc_signal< sc_lv<9> > lbuf_1_addr_reg_629;
    sc_signal< sc_lv<1> > tmp_3_fu_294_p2;
    sc_signal< sc_lv<1> > tmp_last_V_fu_300_p2;
    sc_signal< sc_lv<1> > tmp_last_V_reg_642;
    sc_signal< sc_lv<1> > tmp_last_V_reg_642_pp0_iter1_reg;
    sc_signal< sc_lv<19> > idx_urem_fu_318_p3;
    sc_signal< sc_lv<8> > kbuf_2_0_load_6_reg_652;
    sc_signal< sc_lv<12> > result_2_1_1_fu_457_p2;
    sc_signal< sc_lv<12> > result_2_1_1_reg_657;
    sc_signal< sc_lv<10> > tmp6_fu_484_p2;
    sc_signal< sc_lv<10> > tmp6_reg_662;
    sc_signal< sc_lv<8> > tmp_V_fu_543_p3;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter1_state3;
    sc_signal< sc_lv<9> > lbuf_0_address0;
    sc_signal< sc_logic > lbuf_0_ce0;
    sc_signal< sc_lv<8> > lbuf_0_q0;
    sc_signal< sc_logic > lbuf_0_ce1;
    sc_signal< sc_logic > lbuf_0_we1;
    sc_signal< sc_lv<9> > lbuf_1_address0;
    sc_signal< sc_logic > lbuf_1_ce0;
    sc_signal< sc_lv<8> > lbuf_1_q0;
    sc_signal< sc_logic > lbuf_1_ce1;
    sc_signal< sc_logic > lbuf_1_we1;
    sc_signal< sc_lv<64> > tmp_1_fu_265_p1;
    sc_signal< sc_lv<8> > kbuf_0_0_fu_108;
    sc_signal< sc_lv<8> > kbuf_0_1_fu_112;
    sc_signal< sc_lv<8> > kbuf_1_0_s_fu_116;
    sc_signal< sc_lv<8> > kbuf_1_0_fu_120;
    sc_signal< sc_lv<8> > kbuf_1_1_fu_124;
    sc_signal< sc_lv<8> > kbuf_1_2_1_fu_379_p3;
    sc_signal< sc_lv<8> > kbuf_2_0_s_fu_128;
    sc_signal< sc_lv<8> > kbuf_2_0_fu_132;
    sc_signal< sc_lv<8> > kbuf_2_1_fu_136;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<19> > next_urem_fu_306_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_312_p2;
    sc_signal< sc_lv<9> > tmp_16_cast_fu_399_p1;
    sc_signal< sc_lv<9> > tmp_16_0_1_cast_fu_403_p1;
    sc_signal< sc_lv<9> > tmp1_fu_415_p2;
    sc_signal< sc_lv<9> > tmp_16_1_cast_fu_411_p1;
    sc_signal< sc_lv<9> > tmp_16_0_2_cast_fu_407_p1;
    sc_signal< sc_lv<9> > tmp2_fu_425_p2;
    sc_signal< sc_lv<10> > tmp1_cast_fu_421_p1;
    sc_signal< sc_lv<10> > tmp2_cast_fu_431_p1;
    sc_signal< sc_lv<10> > result_2_1_fu_435_p2;
    sc_signal< sc_lv<11> > p_shl_fu_445_p3;
    sc_signal< sc_lv<12> > result_2_1_cast_fu_441_p1;
    sc_signal< sc_lv<12> > p_shl_cast_fu_453_p1;
    sc_signal< sc_lv<9> > tmp_16_2_2_cast_fu_470_p1;
    sc_signal< sc_lv<9> > tmp_16_1_2_cast_fu_463_p1;
    sc_signal< sc_lv<9> > tmp7_fu_474_p2;
    sc_signal< sc_lv<10> > tmp_16_2_1_cast_fu_467_p1;
    sc_signal< sc_lv<10> > tmp7_cast_fu_480_p1;
    sc_signal< sc_lv<12> > tmp_16_2_cast_fu_490_p1;
    sc_signal< sc_lv<12> > tmp5_fu_493_p2;
    sc_signal< sc_lv<12> > tmp6_cast_fu_498_p1;
    sc_signal< sc_lv<12> > result_2_2_2_fu_501_p2;
    sc_signal< sc_lv<4> > tmp_4_fu_507_p4;
    sc_signal< sc_lv<1> > icmp_fu_517_p2;
    sc_signal< sc_lv<12> > p_result_fu_523_p3;
    sc_signal< sc_lv<1> > tmp_6_fu_531_p3;
    sc_signal< sc_lv<8> > tmp_7_fu_539_p1;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< bool > ap_block_state6;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<19> ap_const_lv19_40201;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<19> ap_const_lv19_1FC;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<19> ap_const_lv19_200;
    static const sc_lv<19> ap_const_lv19_40200;
    static const sc_lv<19> ap_const_lv19_1FD;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<12> ap_const_lv12_FF;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_io();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_io();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6();
    void thread_ap_condition_pp0_exit_iter1_state3();
    void thread_ap_enable_pp0();
    void thread_ap_idle_pp0();
    void thread_ap_predicate_op49_read_state2();
    void thread_ap_rst_n_inv();
    void thread_exitcond1_fu_253_p2();
    void thread_i_1_fu_259_p2();
    void thread_icmp_fu_517_p2();
    void thread_idx_urem_fu_318_p3();
    void thread_kbuf_1_2_1_fu_379_p3();
    void thread_lbuf_0_address0();
    void thread_lbuf_0_ce0();
    void thread_lbuf_0_ce1();
    void thread_lbuf_0_we1();
    void thread_lbuf_1_address0();
    void thread_lbuf_1_ce0();
    void thread_lbuf_1_ce1();
    void thread_lbuf_1_we1();
    void thread_next_urem_fu_306_p2();
    void thread_p_result_fu_523_p3();
    void thread_p_shl_cast_fu_453_p1();
    void thread_p_shl_fu_445_p3();
    void thread_result_2_1_1_fu_457_p2();
    void thread_result_2_1_cast_fu_441_p1();
    void thread_result_2_1_fu_435_p2();
    void thread_result_2_2_2_fu_501_p2();
    void thread_sin_TDATA_blk_n();
    void thread_sin_TREADY();
    void thread_sin_V_data_V_0_ack_in();
    void thread_sin_V_data_V_0_ack_out();
    void thread_sin_V_data_V_0_data_out();
    void thread_sin_V_data_V_0_load_A();
    void thread_sin_V_data_V_0_load_B();
    void thread_sin_V_data_V_0_sel();
    void thread_sin_V_data_V_0_state_cmp_full();
    void thread_sin_V_data_V_0_vld_in();
    void thread_sin_V_data_V_0_vld_out();
    void thread_sin_V_dest_V_0_ack_out();
    void thread_sin_V_dest_V_0_vld_in();
    void thread_sout_TDATA();
    void thread_sout_TDATA_blk_n();
    void thread_sout_TDEST();
    void thread_sout_TID();
    void thread_sout_TKEEP();
    void thread_sout_TLAST();
    void thread_sout_TSTRB();
    void thread_sout_TUSER();
    void thread_sout_TVALID();
    void thread_sout_V_data_V_1_ack_in();
    void thread_sout_V_data_V_1_ack_out();
    void thread_sout_V_data_V_1_data_out();
    void thread_sout_V_data_V_1_load_A();
    void thread_sout_V_data_V_1_load_B();
    void thread_sout_V_data_V_1_sel();
    void thread_sout_V_data_V_1_state_cmp_full();
    void thread_sout_V_data_V_1_vld_in();
    void thread_sout_V_data_V_1_vld_out();
    void thread_sout_V_dest_V_1_ack_in();
    void thread_sout_V_dest_V_1_ack_out();
    void thread_sout_V_dest_V_1_data_out();
    void thread_sout_V_dest_V_1_sel();
    void thread_sout_V_dest_V_1_vld_in();
    void thread_sout_V_dest_V_1_vld_out();
    void thread_sout_V_id_V_1_ack_in();
    void thread_sout_V_id_V_1_ack_out();
    void thread_sout_V_id_V_1_data_out();
    void thread_sout_V_id_V_1_sel();
    void thread_sout_V_id_V_1_vld_in();
    void thread_sout_V_id_V_1_vld_out();
    void thread_sout_V_keep_V_1_ack_in();
    void thread_sout_V_keep_V_1_ack_out();
    void thread_sout_V_keep_V_1_data_out();
    void thread_sout_V_keep_V_1_sel();
    void thread_sout_V_keep_V_1_vld_in();
    void thread_sout_V_keep_V_1_vld_out();
    void thread_sout_V_last_V_1_ack_in();
    void thread_sout_V_last_V_1_ack_out();
    void thread_sout_V_last_V_1_data_out();
    void thread_sout_V_last_V_1_load_A();
    void thread_sout_V_last_V_1_load_B();
    void thread_sout_V_last_V_1_sel();
    void thread_sout_V_last_V_1_state_cmp_full();
    void thread_sout_V_last_V_1_vld_in();
    void thread_sout_V_last_V_1_vld_out();
    void thread_sout_V_strb_V_1_ack_in();
    void thread_sout_V_strb_V_1_ack_out();
    void thread_sout_V_strb_V_1_data_out();
    void thread_sout_V_strb_V_1_sel();
    void thread_sout_V_strb_V_1_vld_in();
    void thread_sout_V_strb_V_1_vld_out();
    void thread_sout_V_user_V_1_ack_in();
    void thread_sout_V_user_V_1_ack_out();
    void thread_sout_V_user_V_1_data_out();
    void thread_sout_V_user_V_1_sel();
    void thread_sout_V_user_V_1_vld_in();
    void thread_sout_V_user_V_1_vld_out();
    void thread_tmp1_cast_fu_421_p1();
    void thread_tmp1_fu_415_p2();
    void thread_tmp2_cast_fu_431_p1();
    void thread_tmp2_fu_425_p2();
    void thread_tmp5_fu_493_p2();
    void thread_tmp6_cast_fu_498_p1();
    void thread_tmp6_fu_484_p2();
    void thread_tmp7_cast_fu_480_p1();
    void thread_tmp7_fu_474_p2();
    void thread_tmp_16_0_1_cast_fu_403_p1();
    void thread_tmp_16_0_2_cast_fu_407_p1();
    void thread_tmp_16_1_2_cast_fu_463_p1();
    void thread_tmp_16_1_cast_fu_411_p1();
    void thread_tmp_16_2_1_cast_fu_467_p1();
    void thread_tmp_16_2_2_cast_fu_470_p1();
    void thread_tmp_16_2_cast_fu_490_p1();
    void thread_tmp_16_cast_fu_399_p1();
    void thread_tmp_1_fu_265_p1();
    void thread_tmp_3_fu_294_p2();
    void thread_tmp_4_fu_507_p4();
    void thread_tmp_5_fu_271_p2();
    void thread_tmp_6_fu_531_p3();
    void thread_tmp_7_fu_539_p1();
    void thread_tmp_8_fu_312_p2();
    void thread_tmp_V_fu_543_p3();
    void thread_tmp_fu_277_p3();
    void thread_tmp_last_V_fu_300_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
